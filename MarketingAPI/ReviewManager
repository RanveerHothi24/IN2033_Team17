import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class ReviewManager implements ReviewAPI {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/in2033t17";
    private static final String DB_USER = "in2033t17_d";
    private static final String DB_PASSWORD = "qKvalvobOa0";

    @Override
    public List<Review> getShowReviews(int eventId) {
        List<Review> reviews = new ArrayList<>();
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(
                 "SELECT review_id, event_id, review_text, rating, response " +
                 "FROM reviews WHERE event_id = ?")) {

            pstmt.setInt(1, eventId);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                reviews.add(new Review(
                    rs.getInt("review_id"),
                    rs.getInt("event_id"),
                    rs.getString("review_text"),
                    rs.getInt("rating"),
                    rs.getString("response")
                ));
            }
        } catch (SQLException e) {
            System.err.println("Error retrieving show reviews from database: " + e.getMessage());
        }
        return reviews;
    }

    @Override
    public double getAverageRating(int eventId) {
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(
                 "SELECT AVG(rating) AS avg_rating FROM reviews WHERE event_id = ?")) {

            pstmt.setInt(1, eventId);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                double avgRating = rs.getDouble("avg_rating");
                return rs.wasNull() ? -1.0 : avgRating; // Return -1 if no reviews exist
            }
        } catch (SQLException e) {
            System.err.println("Error retrieving average rating from database: " + e.getMessage());
        }
        return -1.0; // Indicate no reviews
    }

    @Override
    public String getImprovementInsights() {
        StringBuilder insights = new StringBuilder("Areas for Improvement Based on Database Reviews:\n");
        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(
                 "SELECT c.show_name, r.review_text, r.rating " +
                 "FROM reviews r " +
                 "JOIN calendar c ON r.event_id = c.event_id " +
                 "WHERE r.rating < 3")) {

            while (rs.next()) {
                insights.append(String.format(
                    "Show: %s, Rating: %d, Feedback: %s\n",
                    rs.getString("show_name"),
                    rs.getInt("rating"),
                    rs.getString("review_text")
                ));
            }
        } catch (SQLException e) {
            return "Error retrieving improvement insights from database: " + e.getMessage();
        }
        return insights.length() > "Areas for Improvement Based on Database Reviews:\n".length() ? insights.toString() : "No negative reviews found in the database.";
    }
}
